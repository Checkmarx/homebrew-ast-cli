# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.14"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.14/ast-cli_2.0.14_darwin_x64.tar.gz"
      sha256 "a1caa200ce233df36c20b1923fa0b7ca9e89b50d2e556ef42eae8141b5602879"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.14/ast-cli_2.0.14_darwin_arm64.tar.gz"
      sha256 "de4e83a1f17744a6c88e883dc458dcbc0f04a0f223c55543a88258952a446067"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.14/ast-cli_2.0.14_linux_x64.tar.gz"
      sha256 "e4c28dcb8f9ebb910b0537c99ddd154500781c66f9dae71213b92e261bbd0423"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.14/ast-cli_2.0.14_linux_arm64.tar.gz"
      sha256 "89ae6c81a2b78b6007d00852a7329a10caf4ab5ae184b29e5aeec3da1ca14a8a"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
