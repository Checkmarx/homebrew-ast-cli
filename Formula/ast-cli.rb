# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.12"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.12/ast-cli_2.0.12_darwin_x64.tar.gz"
      sha256 "1b77b50545d52f0574bb09a47608e2368cf75b70bd87bdcaced17755ac82c9ff"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.12/ast-cli_2.0.12_darwin_arm64.tar.gz"
      sha256 "66065818892bf281f084053c58d459f2ce5c1f5113abd45b43db13f734e5f57f"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.12/ast-cli_2.0.12_linux_x64.tar.gz"
      sha256 "012f2133dcbf1a9eac26bb2d02a8861b23b81dc7e902a4192acbbdaf085f0952"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.12/ast-cli_2.0.12_linux_arm64.tar.gz"
      sha256 "b8a37ddb96924bcfabf7343b52e24d48a574ff1aac3bfd2ce045f429ca98a470"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
