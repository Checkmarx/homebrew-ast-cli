# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.6"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.6/ast-cli_2.0.6_darwin_x64.tar.gz"
      sha256 "95c4d50988b180debc51b55a3772bdaac43c0d5f0e70b981908fb71951501f9e"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.6/ast-cli_2.0.6_darwin_arm64.tar.gz"
      sha256 "df47bb595e6de379107c53c3353f211ccff7192bb032e01a38c45705b033ab13"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.6/ast-cli_2.0.6_linux_x64.tar.gz"
      sha256 "46b4a8be269b95f54ea42a4dbd2b311c0871d0b71e665ce7c84386f37cfe29e6"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.6/ast-cli_2.0.6_linux_arm64.tar.gz"
      sha256 "4d0c7fb004e4ec7f074dc4e4074cd7677a73807ead5d0b670e0c4f6707ed7bb0"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
