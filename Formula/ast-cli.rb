# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.16"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.16/ast-cli_2.0.16_darwin_x64.tar.gz"
      sha256 "507644d755d3c5dcaad7e8c0653a941aa18ba29e2c357280c205de6f315e40a6"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.16/ast-cli_2.0.16_darwin_arm64.tar.gz"
      sha256 "0e2af6b07e7450df3853d2e352975236c205280ec72ee674a20157157c80840c"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.16/ast-cli_2.0.16_linux_x64.tar.gz"
      sha256 "d2e440eaf471e44c9d1b59ff00beb84fc9b0bb81da360e8a0ce689158cb4f17a"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
