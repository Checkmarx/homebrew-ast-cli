# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.5"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.5/ast-cli_2.0.5_darwin_x64.tar.gz"
      sha256 "fa56f43461cc48aa8addbc92d713b2d6e9e5faf7e9527fa9e26a70de3dc528be"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.5/ast-cli_2.0.5_darwin_arm64.tar.gz"
      sha256 "59e215fee95cb0e2788df9bd140695fafa90a4fa3ac0b8fbfd0294b6d9858bef"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.5/ast-cli_2.0.5_linux_x64.tar.gz"
      sha256 "38d8aecd3e3a3e375762080a3c192a23be6dfdb4754b2e915e033ccb9429ed3a"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.5/ast-cli_2.0.5_linux_arm64.tar.gz"
      sha256 "9c2443f9597620e4586b49054df6f87657a443e636d5aeceb3b232edd86ae8ec"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
