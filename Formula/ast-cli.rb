# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.4"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.4/ast-cli_2.0.4_darwin_x64.tar.gz"
      sha256 "ca30cc4143cfb6254a133b8c42ae06b6f2adb0d857a0e6e0d4e2c97b11dd83ff"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.4/ast-cli_2.0.4_darwin_arm64.tar.gz"
      sha256 "479dab37a24357bcc6eb04594280eb4639242dbe77dc9c74cee9a538f2897994"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.4/ast-cli_2.0.4_linux_x64.tar.gz"
      sha256 "9d018dc48c6c31999f009fcefc46db244bf7ea13717aa83813a22260d28542c9"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.4/ast-cli_2.0.4_linux_arm64.tar.gz"
      sha256 "dff67bb02ce0a78e6371902d3b58c7cd2c97aa3b47cfee04fa06588a1e3ede25"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
