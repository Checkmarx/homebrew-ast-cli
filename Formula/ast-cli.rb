# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.9"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.9/ast-cli_2.0.9_darwin_x64.tar.gz"
      sha256 "6698303dcd3638e74c7c2671e6d2f1443001de4e7af11a58ead3d0ef367167b6"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.9/ast-cli_2.0.9_darwin_arm64.tar.gz"
      sha256 "b12e14140832805e30d404ccdf03856207f94fec3d31dfad252d52acaac0f1d8"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.9/ast-cli_2.0.9_linux_x64.tar.gz"
      sha256 "f01047a7729b444a3fabe73349bf2607f52d9599235b7e9ac28a7eaa9a748a6f"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.9/ast-cli_2.0.9_linux_arm64.tar.gz"
      sha256 "f113fc9e7df9475e31734cc94eab1ff2ff17ef53c3c5892d4fd116f984d0fce8"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
