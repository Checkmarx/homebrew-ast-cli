# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.18"
  license "Apache"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.18/ast-cli_2.0.18_darwin_x64.tar.gz"
      sha256 "6a8e576a16da759a55f3669add56a6507f9a3096d8a995a6dab41755f6193222"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.18/ast-cli_2.0.18_darwin_arm64.tar.gz"
      sha256 "d9e2bc8cc9d035ea9afa373b0103eeeb734d2623ec0aae07543122ae9f0d0f82"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.18/ast-cli_2.0.18_linux_x64.tar.gz"
      sha256 "0a3defd296341b9abafc552aef95ed8817805a6cce4d0bed23a2e36e4d0954cd"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
