# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AstCli < Formula
  desc "CLI for AST"
  homepage "https://github.com/Checkmarx/ast-cli"
  version "2.0.8"
  license "Apache"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.8/ast-cli_2.0.8_darwin_x64.tar.gz"
      sha256 "fb08043fb006c66a0058b5a9da85a8f47dc74793d5bbee2f892f100db630c8cf"
    end
    if Hardware::CPU.arm?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.8/ast-cli_2.0.8_darwin_arm64.tar.gz"
      sha256 "d01b1f662a727a6ffbcbe75c429e2cac16d0d1535611a82b36cfde91f6cdffd6"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.8/ast-cli_2.0.8_linux_x64.tar.gz"
      sha256 "3cf6fe9b57bb2652bfba7db0e435d75f4ec95a4f4bda9999a8ae20bf1d767224"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/Checkmarx/ast-cli/releases/download/2.0.8/ast-cli_2.0.8_linux_arm64.tar.gz"
      sha256 "691c4bc02ce1a8e62eaebd686d506b61b742e2d48e1cac2a84192e3b1c731f57"
    end
  end

  def install
    bin.install "cx"
    # Install bash completion
    output = Utils.popen_read("#{bin}/cx utils completion -s bash")
    (bash_completion/"cx").write output
    # Install zsh completion
    output = Utils.popen_read("#{bin}/cx utils completion -s zsh")
    (zsh_completion/"_cx").write output
    # Install fish completion
    output = Utils.popen_read("#{bin}/cx utils completion -s fish")
    (fish_completion/"cx.fish").write output
  end

  test do
    system "#{bin}/cx version"
  end
end
